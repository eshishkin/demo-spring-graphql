version: "2"

services:
  mysql:
    image: mysql:8.0.28
    mem_limit: 500m
    cpus: 1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
    ports:
      - "3306:3306"
    networks:
      backend:
        aliases:
          - mysql

  graphql-service:
    image: eshishkin/demo/graphql
    mem_limit: 1g
    cpus: 1
    depends_on:
      - mysql
    expose:
      - "8080"
    ports:
      - "8080:8080"
    environment:
      - JAVA_TOOL_OPTIONS=-Xms256m -Xss512k -Xmx256m -XX:MaxMetaspaceSize=100M -XX:ReservedCodeCacheSize=60M -XX:+UseContainerSupport -XX:+AlwaysActAsServerClassMachine -XX:+AlwaysPreTouch
    command: [
#        "--spring.liquibase.change-log=classpath:/db/changelog/changes.xml",
#        "--logging.level.org.springframework=DEBUG",
#        "--logging.level.com.zaxxer.hikari=INFO"
    ]

    networks:
      backend:
        aliases:
          - graphql-service

#  prometheus:
#    image: prom/prometheus:latest
#    cpus: 0.15
#    volumes:
#      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
#      - ./data/prometheus:/prometheus/data
#    command: "--config.file=/etc/prometheus/prometheus.yml"
#    expose:
#      - 9090
#    ports:
#      - 9090:9090
#    networks:
#      backend:
#        aliases:
#          - prometheus
#
#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:latest
#    cpus: 0.25
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    ports:
#      - 38080:8080
#    command: [
#        '--housekeeping_interval=1s',
#        '--store_container_labels=false'
#      #        '-docker_only=false'
#    ]
#    networks:
#      - backend
#
#  grafana:
#    image: grafana/grafana:7.1.5
#    cpus: 0.15
#    ports:
#      - 3000:3000
#    command: "--config=/etc/grafana/custom/custom.ini"
#    depends_on:
#      - cadvisor
#      - prometheus
#    volumes:
#      - ./grafana/datasources:/etc/grafana/provisioning/datasources
#      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
#      - ./grafana/settings:/etc/grafana/custom
#    networks:
#      - backend

networks:
  backend:
